/*****************************
 * CSS CUSTOM PROPERTIES
 *****************************/
:root {
    /* Core Colors - Light Theme */
    --primary: #7C3AED;
    --primary-light: #8B5CF6;
    --primary-dark: #5B21B6;
    --surface: #FFFFFF;
    --background: #F8FAFC;
    --error: #EF4444;
    --success: #28a745;
    
    /* Text Colors */
    --text-primary: #1E293B;
    --text-secondary: #64748B;
    --text-on-primary: #FFFFFF;
    
    /* Border & Shadow */
    --border: #E2E8F0;
    --shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
    --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    
    /* Effects */
    --glass: rgba(255, 255, 255, 0.9);
    --blur: blur(12px);
    
    /* Spacing */
    --space-1: 0.25rem;  /* 4px */
    --space-2: 0.5rem;   /* 8px */
    --space-3: 0.75rem;  /* 12px */
    --space-4: 1rem;     /* 16px */
    --space-6: 1.5rem;   /* 24px */
    --space-8: 2rem;     /* 32px */
    
    /* Border Radius */
    --radius-sm: 0.375rem;
    --radius: 0.5rem;
    --radius-lg: 0.75rem;
    --radius-xl: 1rem;
    
    /* Transitions */
    --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Dark Theme Colors */
[data-theme="dark"] {
    --primary: #a78bfa;
    --primary-light: #c4b5fd;
    --primary-dark: #7c3aed;
    --surface: #1a1a1a;
    --background: #0f0f0f;
    --error: #ff6b6b;
    
    --text-primary: #f0f0f0;
    --text-secondary: #a0a0a0;
    
    --border: #333333;
    --glass: rgba(26, 26, 26, 0.95);
    --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2);
    
    color-scheme: dark;
}

/*****************************
 * RESET & BASE STYLES
 *****************************/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    font-size: 1rem; /* Base font size */
    line-height: 1.6;
    background: var(--background);
    color: var(--text-primary);
    -webkit-font-smoothing: antialiased;
    transition: background-color 0.4s ease;
}

/*****************************
 * LAYOUT
 *****************************/
.app-container {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.container {
    max-width: 1400px;
    margin: 0 auto;
    padding: var(--space-8);
    width: 100%;
}

.main-layout {
    display: grid;
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
    gap: var(--space-8) calc(var(--space-8) * 3);
    position: relative;
    padding: var(--space-8) var(--space-4);
    max-width: 1800px;
    margin: 0 auto;
}

/* Section Headers */
.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-6);
    padding: var(--space-4) 0;
    border-bottom: 1px solid var(--border);
}

.section-header h2 {
    margin: 0;
    padding: 0;
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-primary);
    opacity: 0.95;
}

/* Section Divider */
.section-divider {
    position: absolute;
    left: 50%;
    top: var(--space-8);
    bottom: var(--space-8);
    width: 2px;
    background: linear-gradient(
        to bottom,
        transparent,
        var(--primary-light) 15%,
        var(--primary) 50%,
        var(--primary-light) 85%,
        transparent
    );
    transform: translateX(-50%);
}

/* Update sections positioning */
.notes-section {
    padding-right: var(--space-6);
    margin-left: 0;
}

.tasks-section {
    padding-left: var(--space-4);
    margin-right: 0;
}

/*****************************
 * HEADER
 *****************************/
.app-header {
    background: var(--glass);
    backdrop-filter: var(--blur);
    border-bottom: 1px solid var(--border);
    position: sticky;
    top: 0;
    z-index: 100;
}

.header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--space-4) var(--space-8);
}

.logo {
    display: flex;
    align-items: center;
    gap: var(--space-3);
}

.logo-icon {
    font-size: 1.75rem;
    color: var(--primary);
}

.logo h1 {
    font-size: 2rem;
    font-weight: 700;
    margin: 0;
    background: linear-gradient(135deg, var(--primary), var(--primary-light));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
}

/* Theme Toggle */
.theme-toggle {
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: var(--transition);
}

.theme-toggle:hover {
    transform: scale(1.1);
    box-shadow: var(--shadow);
}

.light-mode::after {
    content: "☀";
}

.dark-mode::after {
    content: "☾";
}

/*****************************
 * FORMS
 *****************************/
.note-form, .task-form {
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
    padding: var(--space-6);
    margin-bottom: var(--space-6);
    box-shadow: var(--shadow-sm);
}

.form-group {
    margin-bottom: var(--space-4);
}

input, textarea {
    width: 100%;
    padding: var(--space-4);
    font-size: 1rem;
    font-family: inherit;
    min-height: 45px;
    border: 1px solid var(--border);
    border-radius: var(--radius);
    background: var(--surface);
    color: var(--text-primary);
    transition: var(--transition);
}

input:focus, textarea:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
}

textarea {
    min-height: 180px;
    line-height: 1.6;
    resize: vertical;
}

/* Update form actions layout */
.form-actions {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: var(--space-6);
    gap: var(--space-4);
}

/* Modern Button Base Styles */
.primary-btn {
    background: var(--primary);
    color: var(--text-on-primary);
    border: none;
    border-radius: var(--radius-lg);
    padding: var(--space-3) var(--space-6);
    font-size: 0.95rem;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-shadow: 0 2px 8px rgba(124, 58, 237, 0.2);
}

.primary-btn:hover {
    transform: translateY(-2px);
    background: var(--primary-dark);
    box-shadow: 0 4px 12px rgba(124, 58, 237, 0.3);
}

/* Improved Clear Button */
.clear-btn {
    background: var(--surface);
    color: var(--text-secondary);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
    padding: var(--space-2) var(--space-4);
    font-size: 0.85rem;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-shadow: var(--shadow-sm);
}

.clear-btn:hover {
    color: var(--error);
    border-color: var(--error);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(239, 68, 68, 0.15);
}

/* Improved Reminder Toggle Styling */
.reminder-toggle {
    position: relative;
    display: flex;
    align-items: center;
    gap: var(--space-3);
    margin-right: var(--space-4);
}

.reminder-label {
    display: inline-flex;
    align-items: center;
    gap: var(--space-2);
    cursor: pointer;
    font-size: 0.95rem;
    color: var(--text-primary);
    white-space: nowrap;
}

.reminder-input {
    position: absolute;
    left: 120px;
    top: 50%;
    transform: translateY(-50%);
    width: calc(100% - 130px);
    max-width: 300px;
    height: 36px;
    padding: var(--space-2) var(--space-3);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
    background: var(--surface);
    font-size: 0.9rem;
    display: none;
    box-shadow: var(--shadow-sm);
}

.reminder-input:focus {
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
}

/* Modernized Notification Popup */
.notification-card {
    background: var(--surface);
    border-radius: var(--radius-xl);
    width: 90%;
    max-width: 480px;
    overflow: hidden;
    box-shadow: var(--shadow-lg);
}

.notification-header {
    padding: var(--space-6);
    background: var(--background);
    text-align: center;
}

.notification-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: var(--space-2);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.notification-body {
    padding: var(--space-6);
    margin: var(--space-4);
    background: var(--background);
    border-radius: var(--radius-lg);
}

/* Enhanced Confirmation Dialog */
.confirmation-content {
    background: var(--surface);
    border-radius: var(--radius-xl);
    width: 90%;
    max-width: 420px;
    overflow: hidden;
    box-shadow: var(--shadow-lg);
}

.confirmation-buttons {
    padding: var(--space-6);
    display: flex;
    justify-content: center;
    gap: var(--space-4);
    background: var(--background);
}

.confirmation-buttons button {
    min-width: 130px;
    padding: var(--space-3) var(--space-4);
    font-size: 0.95rem;
    font-weight: 500;
    border-radius: var(--radius-lg);
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.confirm-btn {
    background: var(--error);
    color: var(--text-on-primary);
    border: none;
    box-shadow: 0 2px 8px rgba(239, 68, 68, 0.2);
}

.confirm-btn:hover {
    transform: translateY(-2px);
    background: color-mix(in srgb, var(--error) 90%, black);
    box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
}

.cancel-btn {
    background: var(--surface);
    color: var(--text-secondary);
    border: 1px solid var(--border);
}

.cancel-btn:hover {
    transform: translateY(-2px);
    background: var(--background);
    box-shadow: var(--shadow);
}

/* Enhanced Confirmation Dialog Styling */
.confirmation-content > .confirmation-header {
    padding: var(--space-8) var(--space-8) var(--space-4);
    background: var(--background);
    border-bottom: 1px solid var(--border);
}

.confirmation-header p {
    font-size: 1.3rem;
    color: var(--text-primary);
    line-height: 1.5;
    margin-bottom: var(--space-4);
}

.confirmation-header .subtext {
    font-size: 0.95rem;
    color: var(--text-secondary);
    margin-top: var(--space-4);
    line-height: 1.5;
    display: block;
}

/*****************************
 * NOTE CARDS
 *****************************/
.note-card {
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
    padding: var(--space-6);
    margin-bottom: var(--space-4);
    position: relative;
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
    transition: transform 0.2s ease-out,
                box-shadow 0.2s ease-out,
                border-color 0.2s ease-out;
}

.note-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow);
    border-color: var(--primary-light);
}

.note-card * {
    transition: none;
}

.note-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space-4);
}

.note-title {
    font-size: 1rem;
    font-weight: normal;
    color: var(--text-primary);
    opacity: 0.9;
}

.note-content {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--text-primary);
    opacity: 0.8;
}

.note-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.875rem;
    color: var(--text-secondary);
    padding-top: var(--space-3);
    border-top: 1px solid var(--border);
}

/* Pin Button & Badge */
.pin-button {
    background: transparent;
    border: none;
    padding: var(--space-2);
    color: var(--text-secondary);
    transition: color 0.2s ease-out;
    opacity: 0.6;
}

.note-card:hover .pin-button {
    opacity: 1;
}

.pin-button:hover {
    color: var(--primary);
    transform: scale(1.1);
}

.pin-icon::before {
    content: "📌";
    font-size: 1.2rem;
}

.pinned .pin-button {
    color: var(--primary);
    opacity: 1;
}

/* Progress Bar Styling */
.reminder-info {
    background: var(--background);
    border-radius: var(--radius);
    padding: var(--space-3);
    margin-top: var(--space-2);
    transition: transform 0.2s ease-out;
}

.note-card:hover .reminder-info {
    transform: translateY(-2px);
}

.progress-bar-wrapper {
    position: relative;
    overflow: hidden;
    border-radius: var(--radius-sm);
    background: var(--border);
    height: 4px;
    margin-top: var(--space-2);
}

.progress-bar {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    border-radius: inherit;
}

.progress {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    background: linear-gradient(90deg, var(--primary-light), var(--primary));
    transition: width 0.3s ease-out;
    border-radius: inherit;
}

.progress.complete {
    background: var(--success);
}

/* Enhance reminder status */
.reminder-status {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin-bottom: var(--space-2);
    transition: color 0.2s ease-out;
}

.note-card:hover .reminder-status {
    color: var(--text-primary);
}

/* Note Form */
.note-form {
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
    padding: var(--space-6);
    margin-bottom: var(--space-6);
    box-shadow: var(--shadow-sm);
}

.note-form .form-group {
    margin-bottom: var(--space-6);
}

.note-form .form-group:last-child {
    margin-bottom: var(--space-4);
}

.note-form input[type="text"],
.note-form textarea {
    width: 100%;
    padding: var(--space-4);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    background: var(--surface);
    color: var(--text-primary);
    transition: var(--transition);
}

.note-form input[type="text"]:focus,
.note-form textarea:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);
}

.note-form textarea {
    min-height: 150px;
    resize: vertical;
    line-height: 1.6;
}

/* Note Actions */
.note-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space-3);
}

.delete-btn {
    background: transparent;
    color: var(--text-secondary);
    border: 1px solid var(--border);
    padding: var(--space-2) var(--space-4);
    border-radius: var(--radius);
    font-size: 0.875rem;
    opacity: 0.6;
    transition: opacity 0.2s ease-out;
}

.note-card:hover .delete-btn {
    opacity: 1;
}

.delete-btn:hover {
    color: var(--error);
    border-color: var(--error);
    background: rgba(239, 68, 68, 0.1);
}

/*****************************
 * TASKS
 *****************************/
.task-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

.task-item {
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: 1.125rem;
    margin-bottom: 1.125rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: all 0.2s ease-out;
    cursor: grab;
    user-select: none;
    position: relative;
}

.task-item::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    border: 1px solid transparent;
    transition: border-color 0.2s ease-out;
    pointer-events: none;
}

.task-item:hover::before {
    border-color: var(--primary-light);
}

.task-item:hover {
    border-color: var(--primary-light);
    background-color: color-mix(in srgb, var(--primary) 1%, var(--surface));
}

.task-item:active {
    cursor: grabbing;
    background-color: var(--surface);
}

/* Drag and drop states */
.task-item.dragging {
    opacity: 0.9;
    transform: scale(1.02) translateY(-2px);
    box-shadow: var(--shadow);
    z-index: 100;
    background: var(--surface);
    border: 1px solid var(--primary-light);
    cursor: grabbing;
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-item.ghost {
    opacity: 0.3;
    transform: scale(0.98);
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-item.drop-target {
    position: relative;
}

.task-item.drop-target::before {
    content: '';
    position: absolute;
    inset: -1px;
    border: 2px dashed var(--primary);
    border-radius: inherit;
    opacity: 0;
    pointer-events: none;
    animation: dropTargetPulse 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;
}

@keyframes dropTargetPulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.6; }
}

.task-item.drop-target-above::after,
.task-item.drop-target-below::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--primary);
    transform-origin: center;
    animation: dropLineScale 0.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.task-item.drop-target-above::after {
    top: -1px;
}

.task-item.drop-target-below::after {
    bottom: -1px;
}

@keyframes dropLineScale {
    from { transform: scaleX(0); }
    to { transform: scaleX(1); }
}

.task-item.ghost {
    opacity: 0;
    transform: scale(0.9);
}

.task-item.completed .task-text {
    text-decoration: line-through;
    color: var(--text-secondary);
    font-size: 1rem; /* Keep size consistent */
}

.task-label {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex: 1;
    min-height: 24px;
    padding: 2px 0;
    cursor: pointer;
}

/* Enhanced Checkbox styling */
.task-label {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex: 1;
    min-height: 20px;
    padding: 2px 0;
    cursor: pointer;
}

.task-label input[type="checkbox"] {
    margin: 0;
    position: relative;
    width: 13px;
    height: 13px;
    border-radius: 2px;
    border: 1.5px solid var(--border);
    background-color: var(--surface);
    cursor: pointer;
    transition: border-color 0.15s ease-in-out,
                background-color 0.15s ease-in-out,
                box-shadow 0.15s ease-in-out,
                transform 0.15s ease-in-out;
    appearance: none;
    -webkit-appearance: none;
    flex-shrink: 0;
    transform: translateY(-0.5px);
}

.task-label input[type="checkbox"]:hover {
    border-color: var(--primary-light);
    transform: translateY(-0.5px) scale(1.05);
}

.task-label input[type="checkbox"]:active {
    transform: translateY(-0.5px) scale(0.95);
}

.task-label input[type="checkbox"]:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--primary) 10%, transparent);
}

.task-label input[type="checkbox"]:checked {
    background-color: var(--primary);
    border-color: var(--primary);
}

.task-label input[type="checkbox"]:checked:hover {
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
}

.task-label input[type="checkbox"]::after {
    content: "✓";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    color: var(--text-on-primary);
    font-size: 9px;
    line-height: 1;
    font-weight: bold;
    transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    transform-origin: center;
}

.task-label input[type="checkbox"]:checked::after {
    transform: translate(-50%, -50%) scale(1);
}

.task-text {
    font-size: 0.9375rem;
    line-height: 1.4;
    color: var(--text-primary);
    opacity: 0.9;
    transition: color 0.15s ease-out,
                text-decoration-color 0.15s ease-out,
                opacity 0.15s ease-out;
}

.task-text {
    font-size: 0.9375rem;
    line-height: 1.4;
    font-weight: normal;
    color: var(--text-primary);
    opacity: 0.9;
    transition: color 0.15s ease-out,
                text-decoration-color 0.15s ease-out,
                opacity 0.15s ease-out;
}

.task-delete-btn {
    background: transparent;
    color: var(--text-secondary);
    border: none;
    padding: var(--space-2);
    font-size: 1.2rem;
    line-height: 1;
    opacity: 0;
    transform: translateX(-10px);
    transition: opacity 0.3s ease-out,
                transform 0.3s var(--transition-bounce),
                color 0.3s ease-out,
                background-color 0.2s ease-out;
    border-radius: var(--radius);
    will-change: opacity, transform, color, background-color;
}

.task-item.completed .task-delete-btn {
    opacity: 0.6;
    transform: translateX(0);
}

.task-item.completed:hover .task-delete-btn {
    opacity: 1;
}

.task-delete-btn:hover {
    color: var(--error);
    transform: scale(1.1);
    background-color: color-mix(in srgb, var(--error) 10%, transparent);
}

.task-delete-btn:active {
    transform: scale(0.95);
}

/* Task state transitions */
@keyframes taskComplete {
    0% {
        background-color: var(--surface);
        transform: scale(1);
    }
    30% {
        background-color: color-mix(in srgb, var(--primary) 10%, var(--surface));
        transform: scale(1.02);
    }
    100% {
        background-color: color-mix(in srgb, var(--primary) 3%, var(--surface));
        transform: scale(1);
    }
}

.task-item.completed {
    animation: taskComplete 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background-color: color-mix(in srgb, var(--primary) 3%, var(--surface));
    border-color: var(--primary-light);
}

.task-item.completed .task-text {
    text-decoration: line-through;
    text-decoration-color: var(--primary);
    color: var(--text-secondary);
    opacity: 0.75;
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes taskFadeOut {
    0% {
        opacity: 1;
        transform: translateX(0);
    }
    100% {
        opacity: 0;
        transform: translateX(5px);
    }
}

.task-item.fade-out {
    animation: taskFadeOut 0.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    pointer-events: none;
}

/* Task Form */
.task-form .form-group {
    display: flex;
    gap: var(--space-3);
}

.task-form input {
    flex: 1;
    height: 45px;
}

.task-form .primary-btn {
    white-space: nowrap;
}

/*****************************
 * NOTIFICATIONS
 *****************************/
.notification-overlay {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.85);
    backdrop-filter: blur(8px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
}

.notification-card {
    background: var(--surface);
    border-radius: var(--radius-xl);
    padding: 0;
    width: 90%;
    max-width: 450px;
    box-shadow: var(--shadow-lg);
    animation: slideUp 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    overflow: visible;
    transform-style: preserve-3d;
    will-change: transform;
}

.notification-header {
    padding: var(--space-6);
    border-bottom: 1px solid var(--border);
    background: var(--background);
}

.notification-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: var(--space-2);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.notification-time {
    font-size: 0.875rem;
    color: var(--text-secondary);
}

.notification-body {
    padding: var(--space-6);
    margin: var(--space-4);
    background: var(--background);
    border-radius: var(--radius);
}

.notification-body p {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--text-primary);
    opacity: 0.9;
    margin: 0;
}

.notification-footer {
    padding: var(--space-6);
    display: flex;
    justify-content: center;
    border-top: 1px solid var(--border);
    background: var(--background);
}

/*****************************
 * LOADING STATES
 *****************************/
.loading-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--space-4);
    padding: var(--space-8);
    color: var(--text-secondary);
}

/*****************************
 * FOOTER
 *****************************/
.app-footer {
    margin-top: auto;
    padding: var(--space-4);
    text-align: center;
    border-top: 1px solid var(--border);
    color: var(--text-secondary);
    display: flex;
    justify-content: center;
    gap: var(--space-4);
    align-items: center;
}

.clear-cache-btn {
    background: transparent;
    color: var(--text-secondary);
    border: 1px solid var(--border);
    padding: var(--space-2) var(--space-4);
    border-radius: var(--radius);
    font-size: 0.875rem;
    cursor: pointer;
    transition: all 0.2s ease-out;
}

.clear-cache-btn:hover {
    color: var(--error);
    border-color: var(--error);
    background: rgba(239, 68, 68, 0.1);
}

/*****************************
 * RESPONSIVE DESIGN
 *****************************/
@media (max-width: 768px) {
    .main-layout {
        grid-template-columns: 1fr;
        gap: var(--space-6);
    }
    
    .section-divider {
        display: none;
    }
    
    .container {
        padding: var(--space-4);
    }
    
    .note-form, .task-form {
        padding: var(--space-4);
    }
}

/*****************************
 * ANIMATIONS
 *****************************/
@keyframes spin {
    to { transform: rotate(360deg); }
}

.loading-spinner {
    width: 2rem;
    height: 2rem;
    border: 2px solid var(--border);
    border-top-color: var(--primary);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

/*****************************
 * NOTES
 *****************************/
.notes-container {
    display: flex;
    flex-direction: column;
    gap: var(--space-6);
}

.note-content-wrapper {
    gap: var(--space-4);
}

.note-header {
    margin-bottom: var(--space-3);
}

.note-title {
    font-size: 1.2rem;
    line-height: 1.4;
}

.note-content {
    line-height: 1.6;
    margin: var(--space-3) 0;
}

.note-meta {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin: var(--space-2) 0;
}

/* Reminder styling */
.reminder-toggle {
    display: flex;
    align-items: center;
    position: relative;
    padding: var(--space-2) 0;
    width: 100%;
}

.reminder-toggle label {
    display: inline-flex;
    align-items: center;
    gap: var(--space-3);
    cursor: pointer;
}

.reminder-input {
    position: absolute;
    left: 140px; /* Adjusted position */
    top: 50%;
    transform: translateY(-50%);
    width: calc(100% - 150px);
    height: 36px;
    padding: var(--space-2) var(--space-3);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    background: var(--surface);
    color: var(--text-primary);
    display: none; /* Changed from visibility: hidden */
    transition: var(--transition);
}

/* Show reminder input when checkbox is checked */
#enableReminder:checked ~ .reminder-input {
    display: block; /* Changed from visibility: visible */
    animation: fadeIn 0.2s ease-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(-50%) translateX(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(-50%) translateX(0);
    }
}

/* Only show reminder info if it exists */
.reminder-info {
    display: none;
}

.note-card[data-progress] .reminder-info {
    display: block;
}

/* Modern Popup Base Styles */
.overlay-base, .notification-overlay, .confirmation-dialog {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.75);
    backdrop-filter: blur(8px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    padding: var(--space-4);
}

/* Unified Popup Card Styles */
.notification-card, .confirmation-content {
    background: var(--surface);
    border-radius: var(--radius-xl);
    width: 90%;
    max-width: 480px;
    overflow: hidden;
    box-shadow: var(--shadow-lg);
    animation: popIn 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    text-align: center;
}

/* Popup Headers */
.notification-header, .confirmation-content > p {
    padding: var(--space-8);
    background: var(--background);
    border-bottom: 1px solid var(--border);
}

.notification-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
    margin-bottom: var(--space-2);
}

.notification-time {
    font-size: 0.95rem;
    color: var(--text-secondary);
}

/* Popup Body */
.notification-body {
    padding: var(--space-6);
    margin: var(--space-4);
    background: var(--background);
    border-radius: var(--radius-lg);
    text-align: center;
}

.notification-body p {
    font-size: 1rem;
    line-height: 1.6;
    color: var(--text-primary);
    opacity: 0.9;
}

/* Popup Footer & Buttons */
.notification-footer, .confirmation-buttons {
    padding: var(--space-6);
    display: flex;
    justify-content: center;
    gap: var(--space-4);
    background: var(--background);
    border-top: 1px solid var(--border);
}

/* Confirmation Dialog Specific */
.confirmation-content > p {
    font-size: 1.1rem;
    color: var(--text-primary);
    padding: var(--space-8);
    line-height: 1.5;
}

.confirmation-buttons button {
    min-width: 140px;
    padding: var(--space-3) var(--space-6);
    font-size: 0.95rem;
    font-weight: 500;
    border-radius: var(--radius-lg);
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.confirm-btn {
    background: var(--error);
    color: var(--text-on-primary);
    border: none;
    box-shadow: 0 2px 8px rgba(239, 68, 68, 0.2);
}

.confirm-btn:hover {
    transform: translateY(-2px);
    background: color-mix(in srgb, var(--error) 90%, black);
    box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
}

.cancel-btn {
    background: var(--surface);
    color: var(--text-secondary);
    border: 1px solid var(--border);
}

.cancel-btn:hover {
    transform: translateY(-2px);
    background: var(--background);
    box-shadow: var(--shadow);
}

/* Popup Animation */
@keyframes popIn {
    from {
        opacity: 0;
        transform: scale(0.95) translateY(10px);
    }
    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

/* Ensure popup content is centered */
.notification-card > *, .confirmation-content > * {
    text-align: center;
}

/* Improve button layout in popups */
.notification-footer .primary-btn,
.confirmation-buttons button {
    min-width: 140px;
    justify-content: center;
}

/* Enhanced Task Interactions */
.task-item {
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                border-color 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid transparent;
    will-change: transform, opacity, border-color, box-shadow, background-color;
    transform-origin: center center;
    margin-bottom: 0.5rem;
    padding: 0.75rem 1rem;
    background: var(--surface);
    border-radius: var(--radius);
}

.task-item:hover {
    transform: translateY(-1px);
    border-color: var(--primary-light);
    box-shadow: var(--shadow-sm);
    background-color: color-mix(in srgb, var(--primary) 2%, var(--surface));
}

.task-item:active {
    transform: translateY(0);
}

/* Drag and drop enhancements */
.task-item.dragging {
    cursor: grabbing;
    opacity: 0.9;
    transform: scale(1.02) translateY(-2px);
    box-shadow: var(--shadow);
    z-index: 100;
    background: var(--surface);
    border: 1px solid var(--primary-light);
}

.task-item.ghost {
    opacity: 0.3;
}

.task-item.drop-target {
    position: relative;
    animation: dropTargetPulse 1s ease-in-out infinite;
}

@keyframes dropTargetPulse {
    0% { background-color: var(--surface); }
    50% { background-color: color-mix(in srgb, var(--primary) 5%, var(--surface)); }
    100% { background-color: var(--surface); }
}

.task-item.drop-target-above::before,
.task-item.drop-target-below::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--primary);
    transform: scaleX(0);
    transition: transform 0.2s ease-out;
}

.task-item.drop-target-above::before {
    top: -1px;
    transform-origin: left;
    transform: scaleX(1);
}

.task-item.drop-target-below::after {
    bottom: -1px;
    transform-origin: right;
    transform: scaleX(1);
}

.task-text {
    transition: color 0.2s ease-out,
                text-decoration 0.2s ease-out,
                opacity 0.2s ease-out;
    text-decoration: none;
    text-decoration-thickness: 1.5px;
    text-underline-offset: 2px;
    will-change: color, text-decoration, opacity;
}

.task-item.completed {
    background-color: color-mix(in srgb, var(--primary) 3%, var(--surface));
    border-color: var(--primary-light);
    transition: background-color 0.2s ease-out,
                border-color 0.2s ease-out;
}

.task-item.completed .task-text {
    text-decoration: line-through;
    text-decoration-color: var(--primary);
    color: var(--text-secondary);
    opacity: 0.75;
    transition: all 0.2s ease-out;
}

/* Task completion and transitions */
.task-item.completed {
    background-color: color-mix(in srgb, var(--primary) 2%, var(--surface));
    border-color: var(--primary-light);
}

.task-item.completed .task-text {
    text-decoration: line-through;
    text-decoration-color: var(--primary);
    color: var(--text-secondary);
    opacity: 0.75;
}

/* Fade out animation */
.task-item.fade-out {
    animation: itemFadeOut 0.15s ease-out forwards;
    pointer-events: none;
}

@keyframes itemFadeOut {
    0% {
        opacity: 1;
        transform: translateX(0);
    }
    100% {
        opacity: 0;
        transform: translateX(4px);
    }
}

/* Drag and drop states */
.task-item.dragging {
    cursor: grabbing;
    opacity: 0.95;
    transform: scale(1.01);
    box-shadow: var(--shadow-sm);
    z-index: 100;
    background: var(--surface);
}

.task-item.ghost {
    opacity: 0.3;
    transform: scale(0.98);
}

.task-item.drop-target::before {
    content: '';
    position: absolute;
    inset: -2px;
    border: 2px dashed var(--primary-light);
    border-radius: inherit;
    opacity: 0;
    animation: targetPulse 1.5s ease-in-out infinite;
}

@keyframes targetPulse {
    0%, 100% { opacity: 0.2; }
    50% { opacity: 0.4; }
}

.task-item.drop-target-above::after,
.task-item.drop-target-below::after {
    content: '';
    position: absolute;
    left: 4px;
    right: 4px;
    height: 2px;
    background: var(--primary);
    transform-origin: center;
    animation: lineScale 0.15s ease-out forwards;
}

.task-item.drop-target-above::after {
    top: -2px;
}

.task-item.drop-target-below::after {
    bottom: -2px;
}

@keyframes lineScale {
    from { transform: scaleX(0); }
    to { transform: scaleX(1); }
}

/* Enhanced Checkbox styling */
.task-label {
    display: flex;
    align-items: center;
    gap: 0.875rem;
    flex: 1;
    min-height: 20px;
    cursor: pointer;
    padding: 1px 0;
}

.task-label input[type="checkbox"] {
    margin: 0;
    position: relative;
    width: 11px;
    height: 11px;
    border-radius: 2px;
    border: 1px solid var(--border);
    background-color: var(--surface);
    cursor: pointer;
    transition: border-color 0.1s ease-out,
                background-color 0.1s ease-out;
    appearance: none;
    -webkit-appearance: none;
    flex-shrink: 0;
}

.task-label input[type="checkbox"]:hover {
    border-color: var(--primary-light);
}

.task-label input[type="checkbox"]:focus-visible {
    outline: none;
    border-color: var(--primary);
}

.task-label input[type="checkbox"]:checked {
    background-color: var(--primary);
    border-color: var(--primary);
}

.task-label input[type="checkbox"]:checked:hover {
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
}

.task-label input[type="checkbox"]::after {
    content: "✓";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    color: var(--text-on-primary);
    font-size: 8px;
    line-height: 1;
    font-weight: bold;
    transition: transform 0.1s ease-out;
}

.task-label input[type="checkbox"]:checked::after {
    transform: translate(-50%, -50%) scale(1);
}

/* Unify text styles */
.task-text,
.note-content,
.reminder-toggle label span,
input,
textarea,
button {
    font-size: 1rem;
    font-family: inherit;
    line-height: 1.5;
}

/* Improved typography */
h1, h2, h3, h4, h5, h6 {
    letter-spacing: -0.025em;
}

/* Update add note button styling */
.add-note-btn {
    white-space: nowrap;
    padding: var(--space-3) var(--space-6);
    font-size: 0.95rem;
    font-weight: 500;
    min-height: 40px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-shadow: 0 2px 8px rgba(124, 58, 237, 0.2);
}

.add-note-btn:hover {
    transform: translateY(-2px);
    background: var(--primary-dark);
    box-shadow: 0 4px 12px rgba(124, 58, 237, 0.3);
}

/* Add shake animation */
@keyframes shake {
    0% { transform: translate(-1px, 0) rotate(0.5deg); }
    25% { transform: translate(1px, 1px) rotate(-0.5deg); }
    50% { transform: translate(-1px, -1px) rotate(0.5deg); }
    75% { transform: translate(1px, 0) rotate(-0.5deg); }
    100% { transform: translate(0, 0) rotate(0); }
}

.shaking {
    animation: shake 0.4s linear infinite;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
    will-change: transform;
}

.notification-card {
    overflow: visible !important;
    position: relative;
    transform-style: preserve-3d;
}

/* Add these new animations */
@keyframes fadeOut {
    0% { opacity: 1; transform: scale(1); }
    100% { opacity: 0; transform: scale(0.95); }
}

.note-card.fade-out {
    animation: fadeOut 0.3s ease-out forwards;
    pointer-events: none;
}

/* Updated faster animation */
@keyframes taskFadeOut {
    0% {
        opacity: 1;
        transform: scale(1);
    }
    100% {
        opacity: 0;
        transform: scale(0.95);
    }
}

.task-item.fade-out {
    animation: taskFadeOut 0.125s ease-out forwards;
    pointer-events: none;
}

.note-card.fade-out {
    animation: taskFadeOut 0.125s ease-out forwards;
    pointer-events: none;
}
