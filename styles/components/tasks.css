/*------------------------------------*\
  #TASKS
\*------------------------------------*/

/**
 * Task List Container
 */
.task-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

/**
 * Task Item
 */
.task-item {
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: 0.75rem 1rem;
    margin-bottom: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                border-color 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1),
                background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: grab;
    user-select: none;
    position: relative;
    will-change: transform, opacity, border-color, box-shadow, background-color;
    transform-origin: center center;
}

.task-item:hover {
    transform: translateY(-1px);
    border-color: var(--primary-light);
    box-shadow: var(--shadow-sm);
    background-color: color-mix(in srgb, var(--primary) 1%, var(--surface));
}

.task-item:active {
    cursor: grabbing;
    transform: translateY(0);
}

/**
 * Task Label and Checkbox
 */
.task-label {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex: 1;
    min-height: 24px;
    cursor: pointer;
    padding: 2px 0;
}

input[type="checkbox"] {
    margin: 0;
    position: relative;
    width: 20px;
    height: 20px;
    border-radius: 4px;
    border: 1.5px solid var(--border);
    background-color: var(--surface);
    cursor: pointer;
    transition: border-color 0.15s ease-out,
                background-color 0.15s ease-out,
                box-shadow 0.15s ease-out;
    appearance: none;
    -webkit-appearance: none;
    flex-shrink: 0;
}

input[type="checkbox"]:hover {
    border-color: var(--primary-light);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--primary) 8%, transparent);
}

input[type="checkbox"]:focus-visible {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--primary) 15%, transparent);
}

input[type="checkbox"]:checked {
    background-color: var(--primary);
    border-color: var(--primary);
}

input[type="checkbox"]:checked:hover {
    background-color: var(--primary-dark);
    border-color: var(--primary-dark);
}

input[type="checkbox"]::after {
    content: "âœ“";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0);
    color: var(--text-on-primary);
    font-size: 12px;
    line-height: 1;
    font-weight: bold;
    transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);
}

input[type="checkbox"]:checked::after {
    transform: translate(-50%, -50%) scale(1);
}

/**
 * Task Text
 */
.task-text {
    font-size: 0.9375rem;
    line-height: 1.4;
    font-weight: normal;
    color: var(--text-primary);
    opacity: 0.95;
    transition: color 0.2s ease-out,
                text-decoration-color 0.2s ease-out,
                opacity 0.2s ease-out;
    text-decoration: none;
    text-decoration-thickness: 1.5px;
    text-underline-offset: 2px;
    will-change: color, text-decoration, opacity;
}

/**
 * Task Delete Button
 */
.task-delete-btn {
    background: transparent;
    color: var(--text-secondary);
    border: none;
    padding: 6px;
    margin-left: 4px;
    font-size: 1.1rem;
    line-height: 1;
    opacity: 0;
    transform: translateX(-8px);
    transition: opacity 0.2s ease-out,
                transform 0.2s var(--transition-bounce),
                color 0.2s ease-out,
                background-color 0.2s ease-out;
    border-radius: var(--radius);
    will-change: opacity, transform, color, background-color;
}

.task-delete-btn:hover {
    color: var(--error);
    transform: scale(1.05);
    background-color: color-mix(in srgb, var(--error) 8%, transparent);
}

.task-delete-btn:active {
    transform: scale(0.95);
}

/**
 * Task States
 */
.task-item.completed {
    background-color: color-mix(in srgb, var(--primary) 2%, var(--surface));
    border-color: var(--primary-light);
    animation: taskComplete 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.task-item.completed .task-text {
    text-decoration: line-through;
    text-decoration-color: var(--primary);
    color: var(--text-secondary);
    opacity: 0.75;
}

.task-item.completed .task-delete-btn {
    opacity: 0.6;
    transform: translateX(0);
}

.task-item.completed:hover .task-delete-btn {
    opacity: 1;
}

/**
 * Drag and Drop States
 */
.task-item.dragging {
    cursor: grabbing;
    opacity: 0.98;
    transform: scale(1.015) translateY(-1px);
    box-shadow: var(--shadow-sm);
    z-index: 100;
    background: var(--surface);
    border-color: var(--primary-light);
}

.task-item.ghost {
    opacity: 0.4;
    transform: scale(0.985);
    background-color: color-mix(in srgb, var(--primary) 3%, var(--surface));
}

.task-item.drop-target {
    position: relative;
}

.task-item.drop-target::before {
    content: '';
    position: absolute;
    inset: -3px;
    border: 2px dashed var(--primary-light);
    border-radius: calc(var(--radius) + 2px);
    opacity: 0;
    animation: targetPulse 1.5s ease-in-out infinite;
    pointer-events: none;
}

.task-item.drop-target-above::after,
.task-item.drop-target-below::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--primary);
    transform-origin: center;
    animation: lineScale 0.15s ease-out forwards;
}

.task-item.drop-target-above::after {
    top: -1px;
}

.task-item.drop-target-below::after {
    bottom: -1px;
}

/**
 * Task Animations
 */
@keyframes taskComplete {
    0% {
        background-color: var(--surface);
        transform: scale(1);
    }
    50% {
        background-color: color-mix(in srgb, var(--primary) 8%, var(--surface));
        transform: scale(1.01);
    }
    100% {
        background-color: color-mix(in srgb, var(--primary) 2%, var(--surface));
        transform: scale(1);
    }
}

@keyframes lineScale {
    from { transform: scaleX(0); }
    to { transform: scaleX(1); }
}

@keyframes targetPulse {
    0% { opacity: 0; }
    50% { opacity: 0.4; }
    100% { opacity: 0; }
}

.task-item.fade-out {
    animation: taskFadeOut 0.2s ease-out forwards;
    pointer-events: none;
}

@keyframes taskFadeOut {
    to {
        opacity: 0;
        transform: translateY(-8px);
    }
}

/**
 * Task Form
 */
.task-form .form-group {
    display: flex;
    gap: var(--space-3);
}

.task-form input {
    flex: 1;
    height: 45px;
}

.task-form .primary-btn {
    white-space: nowrap;
}

/**
 * Responsive Styles
 */
@media (max-width: 768px) {
    .task-form {
        padding: var(--space-4);
    }
    
    .task-form .form-group {
        flex-direction: column;
    }
}